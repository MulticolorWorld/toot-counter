name: deploy

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: ssh config
      env: 
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_KNOWN_HOST: ${{ secrets.SSH_KNOWN_HOST }}
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key
        chmod 600 private_key
        echo "$SSH_KNOWN_HOST" > known_hosts
        chmod 600 known_hosts

    - name: create .env
      env:
        TOOT_COUNTER_ENV: ${{ secrets.TOOT_COUNTER_ENV }}
      run: echo "$TOOT_COUNTER_ENV" > .env
    
    - name: sync source
      env:
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_URL: ${{ secrets.SSH_URL }}
      run: rsync -e "ssh -i private_key -o UserKnownHostsFile=known_hosts" -vr --delete --exclude=.git --exclude=db/data --exclude=proxy/data . "$SSH_USER"@"$SSH_URL":~/toot-counter/

    - name: docker build
      env:
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_URL: ${{ secrets.SSH_URL }}
        SUDO_PASSWORD: ${{ secrets.SUDO_PASSWORD }}
      run: echo "$SUDO_PASSWORD" | ssh -i private_key -o UserKnownHostsFile=known_hosts -tt "$SSH_USER"@"$SSH_URL" "cd ~/toot-counter; sudo docker-compose build"

    - name: docker-compose up
      env:
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_URL: ${{ secrets.SSH_URL }}
        SUDO_PASSWORD: ${{ secrets.SUDO_PASSWORD }}
      run: echo "$SUDO_PASSWORD" | ssh -i private_key -o UserKnownHostsFile=known_hosts -tt "$SSH_USER"@"$SSH_URL" "cd ~/toot-counter; sudo docker-compose up --force-recreate -d proxy"
